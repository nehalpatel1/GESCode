//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Data.EntityClient;
using System.ComponentModel;
using System.Xml.Serialization;
using System.Runtime.Serialization;

[assembly: EdmSchemaAttribute()]
#region EDM Relationship Metadata

[assembly: EdmRelationshipAttribute("GESModel", "FK_Machine_Industry", "Industry", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(HelloGES.DAL.Industry), "Machine", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(HelloGES.DAL.Machine), true)]
[assembly: EdmRelationshipAttribute("GESModel", "FK_Machine_MachineType1", "MachineType", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(HelloGES.DAL.MachineType), "Machine", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(HelloGES.DAL.Machine), true)]
[assembly: EdmRelationshipAttribute("GESModel", "FK_Machine_Manufacturer1", "Manufacturer", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(HelloGES.DAL.Manufacturer), "Machine", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(HelloGES.DAL.Machine), true)]
[assembly: EdmRelationshipAttribute("GESModel", "FK_MachineID", "Machine", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(HelloGES.DAL.Machine), "Photo", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(HelloGES.DAL.Photo), true)]
[assembly: EdmRelationshipAttribute("GESModel", "FK_Users_Roles", "Role", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(HelloGES.DAL.Role), "User", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(HelloGES.DAL.User), true)]

#endregion

namespace HelloGES.DAL
{
    #region Contexts
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    public partial class GESEntities : ObjectContext
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new GESEntities object using the connection string found in the 'GESEntities' section of the application configuration file.
        /// </summary>
        public GESEntities() : base("name=GESEntities", "GESEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new GESEntities object.
        /// </summary>
        public GESEntities(string connectionString) : base(connectionString, "GESEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new GESEntities object.
        /// </summary>
        public GESEntities(EntityConnection connection) : base(connection, "GESEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region Partial Methods
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Industry> Industries
        {
            get
            {
                if ((_Industries == null))
                {
                    _Industries = base.CreateObjectSet<Industry>("Industries");
                }
                return _Industries;
            }
        }
        private ObjectSet<Industry> _Industries;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Machine> Machines
        {
            get
            {
                if ((_Machines == null))
                {
                    _Machines = base.CreateObjectSet<Machine>("Machines");
                }
                return _Machines;
            }
        }
        private ObjectSet<Machine> _Machines;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<MachineType> MachineTypes
        {
            get
            {
                if ((_MachineTypes == null))
                {
                    _MachineTypes = base.CreateObjectSet<MachineType>("MachineTypes");
                }
                return _MachineTypes;
            }
        }
        private ObjectSet<MachineType> _MachineTypes;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<MachineTypeIndustry> MachineTypeIndustries
        {
            get
            {
                if ((_MachineTypeIndustries == null))
                {
                    _MachineTypeIndustries = base.CreateObjectSet<MachineTypeIndustry>("MachineTypeIndustries");
                }
                return _MachineTypeIndustries;
            }
        }
        private ObjectSet<MachineTypeIndustry> _MachineTypeIndustries;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Manufacturer> Manufacturers
        {
            get
            {
                if ((_Manufacturers == null))
                {
                    _Manufacturers = base.CreateObjectSet<Manufacturer>("Manufacturers");
                }
                return _Manufacturers;
            }
        }
        private ObjectSet<Manufacturer> _Manufacturers;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Model> Models
        {
            get
            {
                if ((_Models == null))
                {
                    _Models = base.CreateObjectSet<Model>("Models");
                }
                return _Models;
            }
        }
        private ObjectSet<Model> _Models;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Photo> Photos
        {
            get
            {
                if ((_Photos == null))
                {
                    _Photos = base.CreateObjectSet<Photo>("Photos");
                }
                return _Photos;
            }
        }
        private ObjectSet<Photo> _Photos;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Role> Roles
        {
            get
            {
                if ((_Roles == null))
                {
                    _Roles = base.CreateObjectSet<Role>("Roles");
                }
                return _Roles;
            }
        }
        private ObjectSet<Role> _Roles;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Shantui> Shantuis
        {
            get
            {
                if ((_Shantuis == null))
                {
                    _Shantuis = base.CreateObjectSet<Shantui>("Shantuis");
                }
                return _Shantuis;
            }
        }
        private ObjectSet<Shantui> _Shantuis;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Specification> Specifications
        {
            get
            {
                if ((_Specifications == null))
                {
                    _Specifications = base.CreateObjectSet<Specification>("Specifications");
                }
                return _Specifications;
            }
        }
        private ObjectSet<Specification> _Specifications;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<vMachineTypeCount> vMachineTypeCounts
        {
            get
            {
                if ((_vMachineTypeCounts == null))
                {
                    _vMachineTypeCounts = base.CreateObjectSet<vMachineTypeCount>("vMachineTypeCounts");
                }
                return _vMachineTypeCounts;
            }
        }
        private ObjectSet<vMachineTypeCount> _vMachineTypeCounts;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<vManufacturerCount> vManufacturerCounts
        {
            get
            {
                if ((_vManufacturerCounts == null))
                {
                    _vManufacturerCounts = base.CreateObjectSet<vManufacturerCount>("vManufacturerCounts");
                }
                return _vManufacturerCounts;
            }
        }
        private ObjectSet<vManufacturerCount> _vManufacturerCounts;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<vModelCount> vModelCounts
        {
            get
            {
                if ((_vModelCounts == null))
                {
                    _vModelCounts = base.CreateObjectSet<vModelCount>("vModelCounts");
                }
                return _vModelCounts;
            }
        }
        private ObjectSet<vModelCount> _vModelCounts;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<vShantuiProductList> vShantuiProductLists
        {
            get
            {
                if ((_vShantuiProductLists == null))
                {
                    _vShantuiProductLists = base.CreateObjectSet<vShantuiProductList>("vShantuiProductLists");
                }
                return _vShantuiProductLists;
            }
        }
        private ObjectSet<vShantuiProductList> _vShantuiProductLists;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<vUsedMachineList> vUsedMachineLists
        {
            get
            {
                if ((_vUsedMachineLists == null))
                {
                    _vUsedMachineLists = base.CreateObjectSet<vUsedMachineList>("vUsedMachineLists");
                }
                return _vUsedMachineLists;
            }
        }
        private ObjectSet<vUsedMachineList> _vUsedMachineLists;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Counter> Counters
        {
            get
            {
                if ((_Counters == null))
                {
                    _Counters = base.CreateObjectSet<Counter>("Counters");
                }
                return _Counters;
            }
        }
        private ObjectSet<Counter> _Counters;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Enquiry> Enquiries
        {
            get
            {
                if ((_Enquiries == null))
                {
                    _Enquiries = base.CreateObjectSet<Enquiry>("Enquiries");
                }
                return _Enquiries;
            }
        }
        private ObjectSet<Enquiry> _Enquiries;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<User> Users
        {
            get
            {
                if ((_Users == null))
                {
                    _Users = base.CreateObjectSet<User>("Users");
                }
                return _Users;
            }
        }
        private ObjectSet<User> _Users;

        #endregion
        #region AddTo Methods
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Industries EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToIndustries(Industry industry)
        {
            base.AddObject("Industries", industry);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Machines EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToMachines(Machine machine)
        {
            base.AddObject("Machines", machine);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the MachineTypes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToMachineTypes(MachineType machineType)
        {
            base.AddObject("MachineTypes", machineType);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the MachineTypeIndustries EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToMachineTypeIndustries(MachineTypeIndustry machineTypeIndustry)
        {
            base.AddObject("MachineTypeIndustries", machineTypeIndustry);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Manufacturers EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToManufacturers(Manufacturer manufacturer)
        {
            base.AddObject("Manufacturers", manufacturer);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Models EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToModels(Model model)
        {
            base.AddObject("Models", model);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Photos EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToPhotos(Photo photo)
        {
            base.AddObject("Photos", photo);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Roles EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToRoles(Role role)
        {
            base.AddObject("Roles", role);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Shantuis EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToShantuis(Shantui shantui)
        {
            base.AddObject("Shantuis", shantui);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Specifications EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToSpecifications(Specification specification)
        {
            base.AddObject("Specifications", specification);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the vMachineTypeCounts EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddTovMachineTypeCounts(vMachineTypeCount vMachineTypeCount)
        {
            base.AddObject("vMachineTypeCounts", vMachineTypeCount);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the vManufacturerCounts EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddTovManufacturerCounts(vManufacturerCount vManufacturerCount)
        {
            base.AddObject("vManufacturerCounts", vManufacturerCount);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the vModelCounts EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddTovModelCounts(vModelCount vModelCount)
        {
            base.AddObject("vModelCounts", vModelCount);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the vShantuiProductLists EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddTovShantuiProductLists(vShantuiProductList vShantuiProductList)
        {
            base.AddObject("vShantuiProductLists", vShantuiProductList);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the vUsedMachineLists EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddTovUsedMachineLists(vUsedMachineList vUsedMachineList)
        {
            base.AddObject("vUsedMachineLists", vUsedMachineList);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Counters EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToCounters(Counter counter)
        {
            base.AddObject("Counters", counter);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Enquiries EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToEnquiries(Enquiry enquiry)
        {
            base.AddObject("Enquiries", enquiry);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Users EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToUsers(User user)
        {
            base.AddObject("Users", user);
        }

        #endregion
    }
    

    #endregion
    
    #region Entities
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="GESModel", Name="Counter")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Counter : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Counter object.
        /// </summary>
        /// <param name="rowNo">Initial value of the RowNo property.</param>
        /// <param name="counterType">Initial value of the CounterType property.</param>
        /// <param name="numberOfHits">Initial value of the NumberOfHits property.</param>
        public static Counter CreateCounter(global::System.Int32 rowNo, global::System.String counterType, global::System.Int64 numberOfHits)
        {
            Counter counter = new Counter();
            counter.RowNo = rowNo;
            counter.CounterType = counterType;
            counter.NumberOfHits = numberOfHits;
            return counter;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 RowNo
        {
            get
            {
                return _RowNo;
            }
            set
            {
                if (_RowNo != value)
                {
                    OnRowNoChanging(value);
                    ReportPropertyChanging("RowNo");
                    _RowNo = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("RowNo");
                    OnRowNoChanged();
                }
            }
        }
        private global::System.Int32 _RowNo;
        partial void OnRowNoChanging(global::System.Int32 value);
        partial void OnRowNoChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String CounterType
        {
            get
            {
                return _CounterType;
            }
            set
            {
                OnCounterTypeChanging(value);
                ReportPropertyChanging("CounterType");
                _CounterType = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("CounterType");
                OnCounterTypeChanged();
            }
        }
        private global::System.String _CounterType;
        partial void OnCounterTypeChanging(global::System.String value);
        partial void OnCounterTypeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 NumberOfHits
        {
            get
            {
                return _NumberOfHits;
            }
            set
            {
                OnNumberOfHitsChanging(value);
                ReportPropertyChanging("NumberOfHits");
                _NumberOfHits = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("NumberOfHits");
                OnNumberOfHitsChanged();
            }
        }
        private global::System.Int64 _NumberOfHits;
        partial void OnNumberOfHitsChanging(global::System.Int64 value);
        partial void OnNumberOfHitsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ExecutionPath
        {
            get
            {
                return _ExecutionPath;
            }
            set
            {
                OnExecutionPathChanging(value);
                ReportPropertyChanging("ExecutionPath");
                _ExecutionPath = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ExecutionPath");
                OnExecutionPathChanged();
            }
        }
        private global::System.String _ExecutionPath;
        partial void OnExecutionPathChanging(global::System.String value);
        partial void OnExecutionPathChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> DateInserted
        {
            get
            {
                return _DateInserted;
            }
            set
            {
                OnDateInsertedChanging(value);
                ReportPropertyChanging("DateInserted");
                _DateInserted = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DateInserted");
                OnDateInsertedChanged();
            }
        }
        private Nullable<global::System.DateTime> _DateInserted;
        partial void OnDateInsertedChanging(Nullable<global::System.DateTime> value);
        partial void OnDateInsertedChanged();

        #endregion
    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="GESModel", Name="Enquiry")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Enquiry : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Enquiry object.
        /// </summary>
        /// <param name="enquiryID">Initial value of the EnquiryID property.</param>
        /// <param name="userID">Initial value of the UserID property.</param>
        /// <param name="dateInserted">Initial value of the DateInserted property.</param>
        /// <param name="machineID">Initial value of the MachineID property.</param>
        public static Enquiry CreateEnquiry(global::System.Int32 enquiryID, global::System.Int32 userID, global::System.DateTime dateInserted, global::System.Int32 machineID)
        {
            Enquiry enquiry = new Enquiry();
            enquiry.EnquiryID = enquiryID;
            enquiry.UserID = userID;
            enquiry.DateInserted = dateInserted;
            enquiry.MachineID = machineID;
            return enquiry;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 EnquiryID
        {
            get
            {
                return _EnquiryID;
            }
            set
            {
                if (_EnquiryID != value)
                {
                    OnEnquiryIDChanging(value);
                    ReportPropertyChanging("EnquiryID");
                    _EnquiryID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("EnquiryID");
                    OnEnquiryIDChanged();
                }
            }
        }
        private global::System.Int32 _EnquiryID;
        partial void OnEnquiryIDChanging(global::System.Int32 value);
        partial void OnEnquiryIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 UserID
        {
            get
            {
                return _UserID;
            }
            set
            {
                OnUserIDChanging(value);
                ReportPropertyChanging("UserID");
                _UserID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UserID");
                OnUserIDChanged();
            }
        }
        private global::System.Int32 _UserID;
        partial void OnUserIDChanging(global::System.Int32 value);
        partial void OnUserIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime DateInserted
        {
            get
            {
                return _DateInserted;
            }
            set
            {
                OnDateInsertedChanging(value);
                ReportPropertyChanging("DateInserted");
                _DateInserted = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DateInserted");
                OnDateInsertedChanged();
            }
        }
        private global::System.DateTime _DateInserted;
        partial void OnDateInsertedChanging(global::System.DateTime value);
        partial void OnDateInsertedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Comments
        {
            get
            {
                return _Comments;
            }
            set
            {
                OnCommentsChanging(value);
                ReportPropertyChanging("Comments");
                _Comments = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Comments");
                OnCommentsChanged();
            }
        }
        private global::System.String _Comments;
        partial void OnCommentsChanging(global::System.String value);
        partial void OnCommentsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 MachineID
        {
            get
            {
                return _MachineID;
            }
            set
            {
                OnMachineIDChanging(value);
                ReportPropertyChanging("MachineID");
                _MachineID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("MachineID");
                OnMachineIDChanged();
            }
        }
        private global::System.Int32 _MachineID;
        partial void OnMachineIDChanging(global::System.Int32 value);
        partial void OnMachineIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Source
        {
            get
            {
                return _Source;
            }
            set
            {
                OnSourceChanging(value);
                ReportPropertyChanging("Source");
                _Source = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Source");
                OnSourceChanged();
            }
        }
        private global::System.String _Source;
        partial void OnSourceChanging(global::System.String value);
        partial void OnSourceChanged();

        #endregion
    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="GESModel", Name="Industry")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Industry : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Industry object.
        /// </summary>
        /// <param name="industryID">Initial value of the IndustryID property.</param>
        /// <param name="industryName">Initial value of the IndustryName property.</param>
        /// <param name="status">Initial value of the Status property.</param>
        public static Industry CreateIndustry(global::System.Int32 industryID, global::System.String industryName, global::System.String status)
        {
            Industry industry = new Industry();
            industry.IndustryID = industryID;
            industry.IndustryName = industryName;
            industry.Status = status;
            return industry;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 IndustryID
        {
            get
            {
                return _IndustryID;
            }
            set
            {
                if (_IndustryID != value)
                {
                    OnIndustryIDChanging(value);
                    ReportPropertyChanging("IndustryID");
                    _IndustryID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("IndustryID");
                    OnIndustryIDChanged();
                }
            }
        }
        private global::System.Int32 _IndustryID;
        partial void OnIndustryIDChanging(global::System.Int32 value);
        partial void OnIndustryIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String IndustryName
        {
            get
            {
                return _IndustryName;
            }
            set
            {
                OnIndustryNameChanging(value);
                ReportPropertyChanging("IndustryName");
                _IndustryName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("IndustryName");
                OnIndustryNameChanged();
            }
        }
        private global::System.String _IndustryName;
        partial void OnIndustryNameChanging(global::System.String value);
        partial void OnIndustryNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String IndustryDescription
        {
            get
            {
                return _IndustryDescription;
            }
            set
            {
                OnIndustryDescriptionChanging(value);
                ReportPropertyChanging("IndustryDescription");
                _IndustryDescription = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("IndustryDescription");
                OnIndustryDescriptionChanged();
            }
        }
        private global::System.String _IndustryDescription;
        partial void OnIndustryDescriptionChanging(global::System.String value);
        partial void OnIndustryDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Status
        {
            get
            {
                return _Status;
            }
            set
            {
                OnStatusChanging(value);
                ReportPropertyChanging("Status");
                _Status = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Status");
                OnStatusChanged();
            }
        }
        private global::System.String _Status;
        partial void OnStatusChanging(global::System.String value);
        partial void OnStatusChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("GESModel", "FK_Machine_Industry", "Machine")]
        public EntityCollection<Machine> Machines
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Machine>("GESModel.FK_Machine_Industry", "Machine");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Machine>("GESModel.FK_Machine_Industry", "Machine", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="GESModel", Name="Machine")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Machine : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Machine object.
        /// </summary>
        /// <param name="machineID">Initial value of the MachineID property.</param>
        /// <param name="machineTypeID">Initial value of the MachineTypeID property.</param>
        /// <param name="machineGrade">Initial value of the MachineGrade property.</param>
        /// <param name="status">Initial value of the Status property.</param>
        public static Machine CreateMachine(global::System.Int32 machineID, global::System.Int32 machineTypeID, global::System.String machineGrade, global::System.String status)
        {
            Machine machine = new Machine();
            machine.MachineID = machineID;
            machine.MachineTypeID = machineTypeID;
            machine.MachineGrade = machineGrade;
            machine.Status = status;
            return machine;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 MachineID
        {
            get
            {
                return _MachineID;
            }
            set
            {
                if (_MachineID != value)
                {
                    OnMachineIDChanging(value);
                    ReportPropertyChanging("MachineID");
                    _MachineID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("MachineID");
                    OnMachineIDChanged();
                }
            }
        }
        private global::System.Int32 _MachineID;
        partial void OnMachineIDChanging(global::System.Int32 value);
        partial void OnMachineIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> ManufacturerID
        {
            get
            {
                return _ManufacturerID;
            }
            set
            {
                OnManufacturerIDChanging(value);
                ReportPropertyChanging("ManufacturerID");
                _ManufacturerID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ManufacturerID");
                OnManufacturerIDChanged();
            }
        }
        private Nullable<global::System.Int32> _ManufacturerID;
        partial void OnManufacturerIDChanging(Nullable<global::System.Int32> value);
        partial void OnManufacturerIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 MachineTypeID
        {
            get
            {
                return _MachineTypeID;
            }
            set
            {
                OnMachineTypeIDChanging(value);
                ReportPropertyChanging("MachineTypeID");
                _MachineTypeID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("MachineTypeID");
                OnMachineTypeIDChanged();
            }
        }
        private global::System.Int32 _MachineTypeID;
        partial void OnMachineTypeIDChanging(global::System.Int32 value);
        partial void OnMachineTypeIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> ModelID
        {
            get
            {
                return _ModelID;
            }
            set
            {
                OnModelIDChanging(value);
                ReportPropertyChanging("ModelID");
                _ModelID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ModelID");
                OnModelIDChanged();
            }
        }
        private Nullable<global::System.Int32> _ModelID;
        partial void OnModelIDChanging(Nullable<global::System.Int32> value);
        partial void OnModelIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> IndustryID
        {
            get
            {
                return _IndustryID;
            }
            set
            {
                OnIndustryIDChanging(value);
                ReportPropertyChanging("IndustryID");
                _IndustryID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IndustryID");
                OnIndustryIDChanged();
            }
        }
        private Nullable<global::System.Int32> _IndustryID;
        partial void OnIndustryIDChanging(Nullable<global::System.Int32> value);
        partial void OnIndustryIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String MachineDescription
        {
            get
            {
                return _MachineDescription;
            }
            set
            {
                OnMachineDescriptionChanging(value);
                ReportPropertyChanging("MachineDescription");
                _MachineDescription = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("MachineDescription");
                OnMachineDescriptionChanged();
            }
        }
        private global::System.String _MachineDescription;
        partial void OnMachineDescriptionChanging(global::System.String value);
        partial void OnMachineDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String MachineGrade
        {
            get
            {
                return _MachineGrade;
            }
            set
            {
                OnMachineGradeChanging(value);
                ReportPropertyChanging("MachineGrade");
                _MachineGrade = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("MachineGrade");
                OnMachineGradeChanged();
            }
        }
        private global::System.String _MachineGrade;
        partial void OnMachineGradeChanging(global::System.String value);
        partial void OnMachineGradeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String SerialNo
        {
            get
            {
                return _SerialNo;
            }
            set
            {
                OnSerialNoChanging(value);
                ReportPropertyChanging("SerialNo");
                _SerialNo = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("SerialNo");
                OnSerialNoChanged();
            }
        }
        private global::System.String _SerialNo;
        partial void OnSerialNoChanging(global::System.String value);
        partial void OnSerialNoChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Year
        {
            get
            {
                return _Year;
            }
            set
            {
                OnYearChanging(value);
                ReportPropertyChanging("Year");
                _Year = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Year");
                OnYearChanged();
            }
        }
        private global::System.String _Year;
        partial void OnYearChanging(global::System.String value);
        partial void OnYearChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Mileage
        {
            get
            {
                return _Mileage;
            }
            set
            {
                OnMileageChanging(value);
                ReportPropertyChanging("Mileage");
                _Mileage = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Mileage");
                OnMileageChanged();
            }
        }
        private global::System.String _Mileage;
        partial void OnMileageChanging(global::System.String value);
        partial void OnMileageChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Location
        {
            get
            {
                return _Location;
            }
            set
            {
                OnLocationChanging(value);
                ReportPropertyChanging("Location");
                _Location = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Location");
                OnLocationChanged();
            }
        }
        private global::System.String _Location;
        partial void OnLocationChanging(global::System.String value);
        partial void OnLocationChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> ContactUserID
        {
            get
            {
                return _ContactUserID;
            }
            set
            {
                OnContactUserIDChanging(value);
                ReportPropertyChanging("ContactUserID");
                _ContactUserID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ContactUserID");
                OnContactUserIDChanged();
            }
        }
        private Nullable<global::System.Int32> _ContactUserID;
        partial void OnContactUserIDChanging(Nullable<global::System.Int32> value);
        partial void OnContactUserIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> CostPrice
        {
            get
            {
                return _CostPrice;
            }
            set
            {
                OnCostPriceChanging(value);
                ReportPropertyChanging("CostPrice");
                _CostPrice = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CostPrice");
                OnCostPriceChanged();
            }
        }
        private Nullable<global::System.Decimal> _CostPrice;
        partial void OnCostPriceChanging(Nullable<global::System.Decimal> value);
        partial void OnCostPriceChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> SellPrice
        {
            get
            {
                return _SellPrice;
            }
            set
            {
                OnSellPriceChanging(value);
                ReportPropertyChanging("SellPrice");
                _SellPrice = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SellPrice");
                OnSellPriceChanged();
            }
        }
        private Nullable<global::System.Decimal> _SellPrice;
        partial void OnSellPriceChanging(Nullable<global::System.Decimal> value);
        partial void OnSellPriceChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Status
        {
            get
            {
                return _Status;
            }
            set
            {
                OnStatusChanging(value);
                ReportPropertyChanging("Status");
                _Status = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Status");
                OnStatusChanged();
            }
        }
        private global::System.String _Status;
        partial void OnStatusChanging(global::System.String value);
        partial void OnStatusChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> DateInserted
        {
            get
            {
                return _DateInserted;
            }
            set
            {
                OnDateInsertedChanging(value);
                ReportPropertyChanging("DateInserted");
                _DateInserted = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DateInserted");
                OnDateInsertedChanged();
            }
        }
        private Nullable<global::System.DateTime> _DateInserted;
        partial void OnDateInsertedChanging(Nullable<global::System.DateTime> value);
        partial void OnDateInsertedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ContactPerson
        {
            get
            {
                return _ContactPerson;
            }
            set
            {
                OnContactPersonChanging(value);
                ReportPropertyChanging("ContactPerson");
                _ContactPerson = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ContactPerson");
                OnContactPersonChanged();
            }
        }
        private global::System.String _ContactPerson;
        partial void OnContactPersonChanging(global::System.String value);
        partial void OnContactPersonChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String EmailAddress
        {
            get
            {
                return _EmailAddress;
            }
            set
            {
                OnEmailAddressChanging(value);
                ReportPropertyChanging("EmailAddress");
                _EmailAddress = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("EmailAddress");
                OnEmailAddressChanged();
            }
        }
        private global::System.String _EmailAddress;
        partial void OnEmailAddressChanging(global::System.String value);
        partial void OnEmailAddressChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ContactNumber
        {
            get
            {
                return _ContactNumber;
            }
            set
            {
                OnContactNumberChanging(value);
                ReportPropertyChanging("ContactNumber");
                _ContactNumber = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ContactNumber");
                OnContactNumberChanged();
            }
        }
        private global::System.String _ContactNumber;
        partial void OnContactNumberChanging(global::System.String value);
        partial void OnContactNumberChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String DealerMachine
        {
            get
            {
                return _DealerMachine;
            }
            set
            {
                OnDealerMachineChanging(value);
                ReportPropertyChanging("DealerMachine");
                _DealerMachine = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("DealerMachine");
                OnDealerMachineChanged();
            }
        }
        private global::System.String _DealerMachine;
        partial void OnDealerMachineChanging(global::System.String value);
        partial void OnDealerMachineChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ModelName
        {
            get
            {
                return _ModelName;
            }
            set
            {
                OnModelNameChanging(value);
                ReportPropertyChanging("ModelName");
                _ModelName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ModelName");
                OnModelNameChanged();
            }
        }
        private global::System.String _ModelName;
        partial void OnModelNameChanging(global::System.String value);
        partial void OnModelNameChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("GESModel", "FK_Machine_Industry", "Industry")]
        public Industry Industry
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Industry>("GESModel.FK_Machine_Industry", "Industry").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Industry>("GESModel.FK_Machine_Industry", "Industry").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Industry> IndustryReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Industry>("GESModel.FK_Machine_Industry", "Industry");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Industry>("GESModel.FK_Machine_Industry", "Industry", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("GESModel", "FK_Machine_MachineType1", "MachineType")]
        public MachineType MachineType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MachineType>("GESModel.FK_Machine_MachineType1", "MachineType").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MachineType>("GESModel.FK_Machine_MachineType1", "MachineType").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<MachineType> MachineTypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MachineType>("GESModel.FK_Machine_MachineType1", "MachineType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<MachineType>("GESModel.FK_Machine_MachineType1", "MachineType", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("GESModel", "FK_Machine_Manufacturer1", "Manufacturer")]
        public Manufacturer Manufacturer
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Manufacturer>("GESModel.FK_Machine_Manufacturer1", "Manufacturer").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Manufacturer>("GESModel.FK_Machine_Manufacturer1", "Manufacturer").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Manufacturer> ManufacturerReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Manufacturer>("GESModel.FK_Machine_Manufacturer1", "Manufacturer");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Manufacturer>("GESModel.FK_Machine_Manufacturer1", "Manufacturer", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("GESModel", "FK_MachineID", "Photo")]
        public EntityCollection<Photo> Photos
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Photo>("GESModel.FK_MachineID", "Photo");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Photo>("GESModel.FK_MachineID", "Photo", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="GESModel", Name="MachineType")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class MachineType : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new MachineType object.
        /// </summary>
        /// <param name="machineTypeID">Initial value of the MachineTypeID property.</param>
        /// <param name="machineTypeName">Initial value of the MachineTypeName property.</param>
        /// <param name="status">Initial value of the Status property.</param>
        public static MachineType CreateMachineType(global::System.Int32 machineTypeID, global::System.String machineTypeName, global::System.String status)
        {
            MachineType machineType = new MachineType();
            machineType.MachineTypeID = machineTypeID;
            machineType.MachineTypeName = machineTypeName;
            machineType.Status = status;
            return machineType;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 MachineTypeID
        {
            get
            {
                return _MachineTypeID;
            }
            set
            {
                if (_MachineTypeID != value)
                {
                    OnMachineTypeIDChanging(value);
                    ReportPropertyChanging("MachineTypeID");
                    _MachineTypeID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("MachineTypeID");
                    OnMachineTypeIDChanged();
                }
            }
        }
        private global::System.Int32 _MachineTypeID;
        partial void OnMachineTypeIDChanging(global::System.Int32 value);
        partial void OnMachineTypeIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String MachineTypeName
        {
            get
            {
                return _MachineTypeName;
            }
            set
            {
                OnMachineTypeNameChanging(value);
                ReportPropertyChanging("MachineTypeName");
                _MachineTypeName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("MachineTypeName");
                OnMachineTypeNameChanged();
            }
        }
        private global::System.String _MachineTypeName;
        partial void OnMachineTypeNameChanging(global::System.String value);
        partial void OnMachineTypeNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String MachineTypeDescription
        {
            get
            {
                return _MachineTypeDescription;
            }
            set
            {
                OnMachineTypeDescriptionChanging(value);
                ReportPropertyChanging("MachineTypeDescription");
                _MachineTypeDescription = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("MachineTypeDescription");
                OnMachineTypeDescriptionChanged();
            }
        }
        private global::System.String _MachineTypeDescription;
        partial void OnMachineTypeDescriptionChanging(global::System.String value);
        partial void OnMachineTypeDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Status
        {
            get
            {
                return _Status;
            }
            set
            {
                OnStatusChanging(value);
                ReportPropertyChanging("Status");
                _Status = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Status");
                OnStatusChanged();
            }
        }
        private global::System.String _Status;
        partial void OnStatusChanging(global::System.String value);
        partial void OnStatusChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("GESModel", "FK_Machine_MachineType1", "Machine")]
        public EntityCollection<Machine> Machines
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Machine>("GESModel.FK_Machine_MachineType1", "Machine");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Machine>("GESModel.FK_Machine_MachineType1", "Machine", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="GESModel", Name="MachineTypeIndustry")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class MachineTypeIndustry : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new MachineTypeIndustry object.
        /// </summary>
        /// <param name="machineTypeIndustryID">Initial value of the MachineTypeIndustryID property.</param>
        /// <param name="machineTypeID">Initial value of the MachineTypeID property.</param>
        /// <param name="industryID">Initial value of the IndustryID property.</param>
        public static MachineTypeIndustry CreateMachineTypeIndustry(global::System.Int32 machineTypeIndustryID, global::System.Int32 machineTypeID, global::System.Int32 industryID)
        {
            MachineTypeIndustry machineTypeIndustry = new MachineTypeIndustry();
            machineTypeIndustry.MachineTypeIndustryID = machineTypeIndustryID;
            machineTypeIndustry.MachineTypeID = machineTypeID;
            machineTypeIndustry.IndustryID = industryID;
            return machineTypeIndustry;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 MachineTypeIndustryID
        {
            get
            {
                return _MachineTypeIndustryID;
            }
            set
            {
                if (_MachineTypeIndustryID != value)
                {
                    OnMachineTypeIndustryIDChanging(value);
                    ReportPropertyChanging("MachineTypeIndustryID");
                    _MachineTypeIndustryID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("MachineTypeIndustryID");
                    OnMachineTypeIndustryIDChanged();
                }
            }
        }
        private global::System.Int32 _MachineTypeIndustryID;
        partial void OnMachineTypeIndustryIDChanging(global::System.Int32 value);
        partial void OnMachineTypeIndustryIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 MachineTypeID
        {
            get
            {
                return _MachineTypeID;
            }
            set
            {
                OnMachineTypeIDChanging(value);
                ReportPropertyChanging("MachineTypeID");
                _MachineTypeID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("MachineTypeID");
                OnMachineTypeIDChanged();
            }
        }
        private global::System.Int32 _MachineTypeID;
        partial void OnMachineTypeIDChanging(global::System.Int32 value);
        partial void OnMachineTypeIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 IndustryID
        {
            get
            {
                return _IndustryID;
            }
            set
            {
                OnIndustryIDChanging(value);
                ReportPropertyChanging("IndustryID");
                _IndustryID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IndustryID");
                OnIndustryIDChanged();
            }
        }
        private global::System.Int32 _IndustryID;
        partial void OnIndustryIDChanging(global::System.Int32 value);
        partial void OnIndustryIDChanged();

        #endregion
    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="GESModel", Name="Manufacturer")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Manufacturer : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Manufacturer object.
        /// </summary>
        /// <param name="manufacturerID">Initial value of the ManufacturerID property.</param>
        /// <param name="manufacturerName">Initial value of the ManufacturerName property.</param>
        /// <param name="status">Initial value of the Status property.</param>
        public static Manufacturer CreateManufacturer(global::System.Int32 manufacturerID, global::System.String manufacturerName, global::System.String status)
        {
            Manufacturer manufacturer = new Manufacturer();
            manufacturer.ManufacturerID = manufacturerID;
            manufacturer.ManufacturerName = manufacturerName;
            manufacturer.Status = status;
            return manufacturer;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ManufacturerID
        {
            get
            {
                return _ManufacturerID;
            }
            set
            {
                if (_ManufacturerID != value)
                {
                    OnManufacturerIDChanging(value);
                    ReportPropertyChanging("ManufacturerID");
                    _ManufacturerID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ManufacturerID");
                    OnManufacturerIDChanged();
                }
            }
        }
        private global::System.Int32 _ManufacturerID;
        partial void OnManufacturerIDChanging(global::System.Int32 value);
        partial void OnManufacturerIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ManufacturerName
        {
            get
            {
                return _ManufacturerName;
            }
            set
            {
                OnManufacturerNameChanging(value);
                ReportPropertyChanging("ManufacturerName");
                _ManufacturerName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("ManufacturerName");
                OnManufacturerNameChanged();
            }
        }
        private global::System.String _ManufacturerName;
        partial void OnManufacturerNameChanging(global::System.String value);
        partial void OnManufacturerNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ManufacturerDescription
        {
            get
            {
                return _ManufacturerDescription;
            }
            set
            {
                OnManufacturerDescriptionChanging(value);
                ReportPropertyChanging("ManufacturerDescription");
                _ManufacturerDescription = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ManufacturerDescription");
                OnManufacturerDescriptionChanged();
            }
        }
        private global::System.String _ManufacturerDescription;
        partial void OnManufacturerDescriptionChanging(global::System.String value);
        partial void OnManufacturerDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Status
        {
            get
            {
                return _Status;
            }
            set
            {
                OnStatusChanging(value);
                ReportPropertyChanging("Status");
                _Status = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Status");
                OnStatusChanged();
            }
        }
        private global::System.String _Status;
        partial void OnStatusChanging(global::System.String value);
        partial void OnStatusChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("GESModel", "FK_Machine_Manufacturer1", "Machine")]
        public EntityCollection<Machine> Machines
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Machine>("GESModel.FK_Machine_Manufacturer1", "Machine");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Machine>("GESModel.FK_Machine_Manufacturer1", "Machine", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="GESModel", Name="Model")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Model : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Model object.
        /// </summary>
        /// <param name="modelID">Initial value of the ModelID property.</param>
        /// <param name="manufacturerID">Initial value of the ManufacturerID property.</param>
        /// <param name="modelName">Initial value of the ModelName property.</param>
        /// <param name="status">Initial value of the Status property.</param>
        public static Model CreateModel(global::System.Int32 modelID, global::System.Int32 manufacturerID, global::System.String modelName, global::System.String status)
        {
            Model model = new Model();
            model.ModelID = modelID;
            model.ManufacturerID = manufacturerID;
            model.ModelName = modelName;
            model.Status = status;
            return model;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ModelID
        {
            get
            {
                return _ModelID;
            }
            set
            {
                if (_ModelID != value)
                {
                    OnModelIDChanging(value);
                    ReportPropertyChanging("ModelID");
                    _ModelID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ModelID");
                    OnModelIDChanged();
                }
            }
        }
        private global::System.Int32 _ModelID;
        partial void OnModelIDChanging(global::System.Int32 value);
        partial void OnModelIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> MachineTypeID
        {
            get
            {
                return _MachineTypeID;
            }
            set
            {
                OnMachineTypeIDChanging(value);
                ReportPropertyChanging("MachineTypeID");
                _MachineTypeID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("MachineTypeID");
                OnMachineTypeIDChanged();
            }
        }
        private Nullable<global::System.Int32> _MachineTypeID;
        partial void OnMachineTypeIDChanging(Nullable<global::System.Int32> value);
        partial void OnMachineTypeIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ManufacturerID
        {
            get
            {
                return _ManufacturerID;
            }
            set
            {
                OnManufacturerIDChanging(value);
                ReportPropertyChanging("ManufacturerID");
                _ManufacturerID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ManufacturerID");
                OnManufacturerIDChanged();
            }
        }
        private global::System.Int32 _ManufacturerID;
        partial void OnManufacturerIDChanging(global::System.Int32 value);
        partial void OnManufacturerIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ModelName
        {
            get
            {
                return _ModelName;
            }
            set
            {
                OnModelNameChanging(value);
                ReportPropertyChanging("ModelName");
                _ModelName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("ModelName");
                OnModelNameChanged();
            }
        }
        private global::System.String _ModelName;
        partial void OnModelNameChanging(global::System.String value);
        partial void OnModelNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ModelDescription
        {
            get
            {
                return _ModelDescription;
            }
            set
            {
                OnModelDescriptionChanging(value);
                ReportPropertyChanging("ModelDescription");
                _ModelDescription = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ModelDescription");
                OnModelDescriptionChanged();
            }
        }
        private global::System.String _ModelDescription;
        partial void OnModelDescriptionChanging(global::System.String value);
        partial void OnModelDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Status
        {
            get
            {
                return _Status;
            }
            set
            {
                OnStatusChanging(value);
                ReportPropertyChanging("Status");
                _Status = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Status");
                OnStatusChanged();
            }
        }
        private global::System.String _Status;
        partial void OnStatusChanging(global::System.String value);
        partial void OnStatusChanged();

        #endregion
    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="GESModel", Name="Photo")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Photo : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Photo object.
        /// </summary>
        /// <param name="photoID">Initial value of the PhotoID property.</param>
        /// <param name="machineID">Initial value of the MachineID property.</param>
        /// <param name="status">Initial value of the Status property.</param>
        /// <param name="showThumbnail">Initial value of the ShowThumbnail property.</param>
        /// <param name="machinePhotoID">Initial value of the MachinePhotoID property.</param>
        public static Photo CreatePhoto(global::System.Int32 photoID, global::System.Int32 machineID, global::System.String status, global::System.String showThumbnail, global::System.Int32 machinePhotoID)
        {
            Photo photo = new Photo();
            photo.PhotoID = photoID;
            photo.MachineID = machineID;
            photo.Status = status;
            photo.ShowThumbnail = showThumbnail;
            photo.MachinePhotoID = machinePhotoID;
            return photo;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PhotoID
        {
            get
            {
                return _PhotoID;
            }
            set
            {
                if (_PhotoID != value)
                {
                    OnPhotoIDChanging(value);
                    ReportPropertyChanging("PhotoID");
                    _PhotoID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("PhotoID");
                    OnPhotoIDChanged();
                }
            }
        }
        private global::System.Int32 _PhotoID;
        partial void OnPhotoIDChanging(global::System.Int32 value);
        partial void OnPhotoIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 MachineID
        {
            get
            {
                return _MachineID;
            }
            set
            {
                OnMachineIDChanging(value);
                ReportPropertyChanging("MachineID");
                _MachineID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("MachineID");
                OnMachineIDChanged();
            }
        }
        private global::System.Int32 _MachineID;
        partial void OnMachineIDChanging(global::System.Int32 value);
        partial void OnMachineIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String PhotoName
        {
            get
            {
                return _PhotoName;
            }
            set
            {
                OnPhotoNameChanging(value);
                ReportPropertyChanging("PhotoName");
                _PhotoName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("PhotoName");
                OnPhotoNameChanged();
            }
        }
        private global::System.String _PhotoName;
        partial void OnPhotoNameChanging(global::System.String value);
        partial void OnPhotoNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String PhotoDescription
        {
            get
            {
                return _PhotoDescription;
            }
            set
            {
                OnPhotoDescriptionChanging(value);
                ReportPropertyChanging("PhotoDescription");
                _PhotoDescription = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("PhotoDescription");
                OnPhotoDescriptionChanged();
            }
        }
        private global::System.String _PhotoDescription;
        partial void OnPhotoDescriptionChanging(global::System.String value);
        partial void OnPhotoDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String PhotoUrl
        {
            get
            {
                return _PhotoUrl;
            }
            set
            {
                OnPhotoUrlChanging(value);
                ReportPropertyChanging("PhotoUrl");
                _PhotoUrl = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("PhotoUrl");
                OnPhotoUrlChanged();
            }
        }
        private global::System.String _PhotoUrl;
        partial void OnPhotoUrlChanging(global::System.String value);
        partial void OnPhotoUrlChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Status
        {
            get
            {
                return _Status;
            }
            set
            {
                OnStatusChanging(value);
                ReportPropertyChanging("Status");
                _Status = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Status");
                OnStatusChanged();
            }
        }
        private global::System.String _Status;
        partial void OnStatusChanging(global::System.String value);
        partial void OnStatusChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ShowThumbnail
        {
            get
            {
                return _ShowThumbnail;
            }
            set
            {
                OnShowThumbnailChanging(value);
                ReportPropertyChanging("ShowThumbnail");
                _ShowThumbnail = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("ShowThumbnail");
                OnShowThumbnailChanged();
            }
        }
        private global::System.String _ShowThumbnail;
        partial void OnShowThumbnailChanging(global::System.String value);
        partial void OnShowThumbnailChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 MachinePhotoID
        {
            get
            {
                return _MachinePhotoID;
            }
            set
            {
                OnMachinePhotoIDChanging(value);
                ReportPropertyChanging("MachinePhotoID");
                _MachinePhotoID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("MachinePhotoID");
                OnMachinePhotoIDChanged();
            }
        }
        private global::System.Int32 _MachinePhotoID;
        partial void OnMachinePhotoIDChanging(global::System.Int32 value);
        partial void OnMachinePhotoIDChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("GESModel", "FK_MachineID", "Machine")]
        public Machine Machine
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Machine>("GESModel.FK_MachineID", "Machine").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Machine>("GESModel.FK_MachineID", "Machine").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Machine> MachineReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Machine>("GESModel.FK_MachineID", "Machine");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Machine>("GESModel.FK_MachineID", "Machine", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="GESModel", Name="Role")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Role : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Role object.
        /// </summary>
        /// <param name="roleID">Initial value of the RoleID property.</param>
        /// <param name="roleName">Initial value of the RoleName property.</param>
        public static Role CreateRole(global::System.Int32 roleID, global::System.String roleName)
        {
            Role role = new Role();
            role.RoleID = roleID;
            role.RoleName = roleName;
            return role;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 RoleID
        {
            get
            {
                return _RoleID;
            }
            set
            {
                if (_RoleID != value)
                {
                    OnRoleIDChanging(value);
                    ReportPropertyChanging("RoleID");
                    _RoleID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("RoleID");
                    OnRoleIDChanged();
                }
            }
        }
        private global::System.Int32 _RoleID;
        partial void OnRoleIDChanging(global::System.Int32 value);
        partial void OnRoleIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String RoleName
        {
            get
            {
                return _RoleName;
            }
            set
            {
                OnRoleNameChanging(value);
                ReportPropertyChanging("RoleName");
                _RoleName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("RoleName");
                OnRoleNameChanged();
            }
        }
        private global::System.String _RoleName;
        partial void OnRoleNameChanging(global::System.String value);
        partial void OnRoleNameChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("GESModel", "FK_Users_Roles", "User")]
        public EntityCollection<User> Users
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<User>("GESModel.FK_Users_Roles", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<User>("GESModel.FK_Users_Roles", "User", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="GESModel", Name="Shantui")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Shantui : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Shantui object.
        /// </summary>
        /// <param name="productID">Initial value of the ProductID property.</param>
        /// <param name="category">Initial value of the Category property.</param>
        /// <param name="model">Initial value of the Model property.</param>
        /// <param name="operatingWeight">Initial value of the OperatingWeight property.</param>
        /// <param name="engine">Initial value of the Engine property.</param>
        /// <param name="power">Initial value of the Power property.</param>
        /// <param name="mainPicture">Initial value of the MainPicture property.</param>
        /// <param name="mainPictureOrder">Initial value of the MainPictureOrder property.</param>
        public static Shantui CreateShantui(global::System.Int32 productID, global::System.String category, global::System.String model, global::System.String operatingWeight, global::System.String engine, global::System.String power, global::System.String mainPicture, global::System.Int32 mainPictureOrder)
        {
            Shantui shantui = new Shantui();
            shantui.ProductID = productID;
            shantui.Category = category;
            shantui.Model = model;
            shantui.OperatingWeight = operatingWeight;
            shantui.Engine = engine;
            shantui.Power = power;
            shantui.MainPicture = mainPicture;
            shantui.MainPictureOrder = mainPictureOrder;
            return shantui;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ProductID
        {
            get
            {
                return _ProductID;
            }
            set
            {
                if (_ProductID != value)
                {
                    OnProductIDChanging(value);
                    ReportPropertyChanging("ProductID");
                    _ProductID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ProductID");
                    OnProductIDChanged();
                }
            }
        }
        private global::System.Int32 _ProductID;
        partial void OnProductIDChanging(global::System.Int32 value);
        partial void OnProductIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Category
        {
            get
            {
                return _Category;
            }
            set
            {
                OnCategoryChanging(value);
                ReportPropertyChanging("Category");
                _Category = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Category");
                OnCategoryChanged();
            }
        }
        private global::System.String _Category;
        partial void OnCategoryChanging(global::System.String value);
        partial void OnCategoryChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Model
        {
            get
            {
                return _Model;
            }
            set
            {
                OnModelChanging(value);
                ReportPropertyChanging("Model");
                _Model = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Model");
                OnModelChanged();
            }
        }
        private global::System.String _Model;
        partial void OnModelChanging(global::System.String value);
        partial void OnModelChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String OperatingWeight
        {
            get
            {
                return _OperatingWeight;
            }
            set
            {
                OnOperatingWeightChanging(value);
                ReportPropertyChanging("OperatingWeight");
                _OperatingWeight = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("OperatingWeight");
                OnOperatingWeightChanged();
            }
        }
        private global::System.String _OperatingWeight;
        partial void OnOperatingWeightChanging(global::System.String value);
        partial void OnOperatingWeightChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Engine
        {
            get
            {
                return _Engine;
            }
            set
            {
                OnEngineChanging(value);
                ReportPropertyChanging("Engine");
                _Engine = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Engine");
                OnEngineChanged();
            }
        }
        private global::System.String _Engine;
        partial void OnEngineChanging(global::System.String value);
        partial void OnEngineChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Power
        {
            get
            {
                return _Power;
            }
            set
            {
                OnPowerChanging(value);
                ReportPropertyChanging("Power");
                _Power = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Power");
                OnPowerChanged();
            }
        }
        private global::System.String _Power;
        partial void OnPowerChanging(global::System.String value);
        partial void OnPowerChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Capacity
        {
            get
            {
                return _Capacity;
            }
            set
            {
                OnCapacityChanging(value);
                ReportPropertyChanging("Capacity");
                _Capacity = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Capacity");
                OnCapacityChanged();
            }
        }
        private global::System.String _Capacity;
        partial void OnCapacityChanging(global::System.String value);
        partial void OnCapacityChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String TrackWidth
        {
            get
            {
                return _TrackWidth;
            }
            set
            {
                OnTrackWidthChanging(value);
                ReportPropertyChanging("TrackWidth");
                _TrackWidth = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("TrackWidth");
                OnTrackWidthChanged();
            }
        }
        private global::System.String _TrackWidth;
        partial void OnTrackWidthChanging(global::System.String value);
        partial void OnTrackWidthChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String BladeWidth
        {
            get
            {
                return _BladeWidth;
            }
            set
            {
                OnBladeWidthChanging(value);
                ReportPropertyChanging("BladeWidth");
                _BladeWidth = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("BladeWidth");
                OnBladeWidthChanged();
            }
        }
        private global::System.String _BladeWidth;
        partial void OnBladeWidthChanging(global::System.String value);
        partial void OnBladeWidthChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String DrumWidth
        {
            get
            {
                return _DrumWidth;
            }
            set
            {
                OnDrumWidthChanging(value);
                ReportPropertyChanging("DrumWidth");
                _DrumWidth = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("DrumWidth");
                OnDrumWidthChanged();
            }
        }
        private global::System.String _DrumWidth;
        partial void OnDrumWidthChanging(global::System.String value);
        partial void OnDrumWidthChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String PictureURL
        {
            get
            {
                return _PictureURL;
            }
            set
            {
                OnPictureURLChanging(value);
                ReportPropertyChanging("PictureURL");
                _PictureURL = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("PictureURL");
                OnPictureURLChanged();
            }
        }
        private global::System.String _PictureURL;
        partial void OnPictureURLChanging(global::System.String value);
        partial void OnPictureURLChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String MainPicture
        {
            get
            {
                return _MainPicture;
            }
            set
            {
                OnMainPictureChanging(value);
                ReportPropertyChanging("MainPicture");
                _MainPicture = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("MainPicture");
                OnMainPictureChanged();
            }
        }
        private global::System.String _MainPicture;
        partial void OnMainPictureChanging(global::System.String value);
        partial void OnMainPictureChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 MainPictureOrder
        {
            get
            {
                return _MainPictureOrder;
            }
            set
            {
                OnMainPictureOrderChanging(value);
                ReportPropertyChanging("MainPictureOrder");
                _MainPictureOrder = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("MainPictureOrder");
                OnMainPictureOrderChanged();
            }
        }
        private global::System.Int32 _MainPictureOrder;
        partial void OnMainPictureOrderChanging(global::System.Int32 value);
        partial void OnMainPictureOrderChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String SpecsheetURL
        {
            get
            {
                return _SpecsheetURL;
            }
            set
            {
                OnSpecsheetURLChanging(value);
                ReportPropertyChanging("SpecsheetURL");
                _SpecsheetURL = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("SpecsheetURL");
                OnSpecsheetURLChanged();
            }
        }
        private global::System.String _SpecsheetURL;
        partial void OnSpecsheetURLChanging(global::System.String value);
        partial void OnSpecsheetURLChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> Price
        {
            get
            {
                return _Price;
            }
            set
            {
                OnPriceChanging(value);
                ReportPropertyChanging("Price");
                _Price = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Price");
                OnPriceChanged();
            }
        }
        private Nullable<global::System.Decimal> _Price;
        partial void OnPriceChanging(Nullable<global::System.Decimal> value);
        partial void OnPriceChanged();

        #endregion
    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="GESModel", Name="Specification")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Specification : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Specification object.
        /// </summary>
        /// <param name="specID">Initial value of the SpecID property.</param>
        /// <param name="machineID">Initial value of the MachineID property.</param>
        /// <param name="specUrl">Initial value of the SpecUrl property.</param>
        /// <param name="status">Initial value of the Status property.</param>
        /// <param name="machineSpecID">Initial value of the MachineSpecID property.</param>
        public static Specification CreateSpecification(global::System.Int32 specID, global::System.Int32 machineID, global::System.String specUrl, global::System.String status, global::System.Int32 machineSpecID)
        {
            Specification specification = new Specification();
            specification.SpecID = specID;
            specification.MachineID = machineID;
            specification.SpecUrl = specUrl;
            specification.Status = status;
            specification.MachineSpecID = machineSpecID;
            return specification;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 SpecID
        {
            get
            {
                return _SpecID;
            }
            set
            {
                if (_SpecID != value)
                {
                    OnSpecIDChanging(value);
                    ReportPropertyChanging("SpecID");
                    _SpecID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("SpecID");
                    OnSpecIDChanged();
                }
            }
        }
        private global::System.Int32 _SpecID;
        partial void OnSpecIDChanging(global::System.Int32 value);
        partial void OnSpecIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 MachineID
        {
            get
            {
                return _MachineID;
            }
            set
            {
                OnMachineIDChanging(value);
                ReportPropertyChanging("MachineID");
                _MachineID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("MachineID");
                OnMachineIDChanged();
            }
        }
        private global::System.Int32 _MachineID;
        partial void OnMachineIDChanging(global::System.Int32 value);
        partial void OnMachineIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String SpecName
        {
            get
            {
                return _SpecName;
            }
            set
            {
                OnSpecNameChanging(value);
                ReportPropertyChanging("SpecName");
                _SpecName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("SpecName");
                OnSpecNameChanged();
            }
        }
        private global::System.String _SpecName;
        partial void OnSpecNameChanging(global::System.String value);
        partial void OnSpecNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String SpecDescription
        {
            get
            {
                return _SpecDescription;
            }
            set
            {
                OnSpecDescriptionChanging(value);
                ReportPropertyChanging("SpecDescription");
                _SpecDescription = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("SpecDescription");
                OnSpecDescriptionChanged();
            }
        }
        private global::System.String _SpecDescription;
        partial void OnSpecDescriptionChanging(global::System.String value);
        partial void OnSpecDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String SpecUrl
        {
            get
            {
                return _SpecUrl;
            }
            set
            {
                OnSpecUrlChanging(value);
                ReportPropertyChanging("SpecUrl");
                _SpecUrl = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("SpecUrl");
                OnSpecUrlChanged();
            }
        }
        private global::System.String _SpecUrl;
        partial void OnSpecUrlChanging(global::System.String value);
        partial void OnSpecUrlChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Status
        {
            get
            {
                return _Status;
            }
            set
            {
                OnStatusChanging(value);
                ReportPropertyChanging("Status");
                _Status = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Status");
                OnStatusChanged();
            }
        }
        private global::System.String _Status;
        partial void OnStatusChanging(global::System.String value);
        partial void OnStatusChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 MachineSpecID
        {
            get
            {
                return _MachineSpecID;
            }
            set
            {
                OnMachineSpecIDChanging(value);
                ReportPropertyChanging("MachineSpecID");
                _MachineSpecID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("MachineSpecID");
                OnMachineSpecIDChanged();
            }
        }
        private global::System.Int32 _MachineSpecID;
        partial void OnMachineSpecIDChanging(global::System.Int32 value);
        partial void OnMachineSpecIDChanged();

        #endregion
    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="GESModel", Name="User")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class User : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new User object.
        /// </summary>
        /// <param name="userID">Initial value of the UserID property.</param>
        /// <param name="userName">Initial value of the UserName property.</param>
        /// <param name="password">Initial value of the Password property.</param>
        /// <param name="roleID">Initial value of the RoleID property.</param>
        public static User CreateUser(global::System.Int32 userID, global::System.String userName, global::System.String password, global::System.Int32 roleID)
        {
            User user = new User();
            user.UserID = userID;
            user.UserName = userName;
            user.Password = password;
            user.RoleID = roleID;
            return user;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 UserID
        {
            get
            {
                return _UserID;
            }
            set
            {
                if (_UserID != value)
                {
                    OnUserIDChanging(value);
                    ReportPropertyChanging("UserID");
                    _UserID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("UserID");
                    OnUserIDChanged();
                }
            }
        }
        private global::System.Int32 _UserID;
        partial void OnUserIDChanging(global::System.Int32 value);
        partial void OnUserIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String UserName
        {
            get
            {
                return _UserName;
            }
            set
            {
                OnUserNameChanging(value);
                ReportPropertyChanging("UserName");
                _UserName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("UserName");
                OnUserNameChanged();
            }
        }
        private global::System.String _UserName;
        partial void OnUserNameChanging(global::System.String value);
        partial void OnUserNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Password
        {
            get
            {
                return _Password;
            }
            set
            {
                OnPasswordChanging(value);
                ReportPropertyChanging("Password");
                _Password = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Password");
                OnPasswordChanged();
            }
        }
        private global::System.String _Password;
        partial void OnPasswordChanging(global::System.String value);
        partial void OnPasswordChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String FirstName
        {
            get
            {
                return _FirstName;
            }
            set
            {
                OnFirstNameChanging(value);
                ReportPropertyChanging("FirstName");
                _FirstName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("FirstName");
                OnFirstNameChanged();
            }
        }
        private global::System.String _FirstName;
        partial void OnFirstNameChanging(global::System.String value);
        partial void OnFirstNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String LastName
        {
            get
            {
                return _LastName;
            }
            set
            {
                OnLastNameChanging(value);
                ReportPropertyChanging("LastName");
                _LastName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("LastName");
                OnLastNameChanged();
            }
        }
        private global::System.String _LastName;
        partial void OnLastNameChanging(global::System.String value);
        partial void OnLastNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String DisplayName
        {
            get
            {
                return _DisplayName;
            }
            set
            {
                OnDisplayNameChanging(value);
                ReportPropertyChanging("DisplayName");
                _DisplayName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("DisplayName");
                OnDisplayNameChanged();
            }
        }
        private global::System.String _DisplayName;
        partial void OnDisplayNameChanging(global::System.String value);
        partial void OnDisplayNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String CompanyName
        {
            get
            {
                return _CompanyName;
            }
            set
            {
                OnCompanyNameChanging(value);
                ReportPropertyChanging("CompanyName");
                _CompanyName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("CompanyName");
                OnCompanyNameChanged();
            }
        }
        private global::System.String _CompanyName;
        partial void OnCompanyNameChanging(global::System.String value);
        partial void OnCompanyNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Designation
        {
            get
            {
                return _Designation;
            }
            set
            {
                OnDesignationChanging(value);
                ReportPropertyChanging("Designation");
                _Designation = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Designation");
                OnDesignationChanged();
            }
        }
        private global::System.String _Designation;
        partial void OnDesignationChanging(global::System.String value);
        partial void OnDesignationChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String TelephoneNo
        {
            get
            {
                return _TelephoneNo;
            }
            set
            {
                OnTelephoneNoChanging(value);
                ReportPropertyChanging("TelephoneNo");
                _TelephoneNo = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("TelephoneNo");
                OnTelephoneNoChanged();
            }
        }
        private global::System.String _TelephoneNo;
        partial void OnTelephoneNoChanging(global::System.String value);
        partial void OnTelephoneNoChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String CellNo
        {
            get
            {
                return _CellNo;
            }
            set
            {
                OnCellNoChanging(value);
                ReportPropertyChanging("CellNo");
                _CellNo = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("CellNo");
                OnCellNoChanged();
            }
        }
        private global::System.String _CellNo;
        partial void OnCellNoChanging(global::System.String value);
        partial void OnCellNoChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String FaxNo
        {
            get
            {
                return _FaxNo;
            }
            set
            {
                OnFaxNoChanging(value);
                ReportPropertyChanging("FaxNo");
                _FaxNo = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("FaxNo");
                OnFaxNoChanged();
            }
        }
        private global::System.String _FaxNo;
        partial void OnFaxNoChanging(global::System.String value);
        partial void OnFaxNoChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String AddrStreet1
        {
            get
            {
                return _AddrStreet1;
            }
            set
            {
                OnAddrStreet1Changing(value);
                ReportPropertyChanging("AddrStreet1");
                _AddrStreet1 = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("AddrStreet1");
                OnAddrStreet1Changed();
            }
        }
        private global::System.String _AddrStreet1;
        partial void OnAddrStreet1Changing(global::System.String value);
        partial void OnAddrStreet1Changed();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String AddrStreet2
        {
            get
            {
                return _AddrStreet2;
            }
            set
            {
                OnAddrStreet2Changing(value);
                ReportPropertyChanging("AddrStreet2");
                _AddrStreet2 = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("AddrStreet2");
                OnAddrStreet2Changed();
            }
        }
        private global::System.String _AddrStreet2;
        partial void OnAddrStreet2Changing(global::System.String value);
        partial void OnAddrStreet2Changed();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String AddrSuburb
        {
            get
            {
                return _AddrSuburb;
            }
            set
            {
                OnAddrSuburbChanging(value);
                ReportPropertyChanging("AddrSuburb");
                _AddrSuburb = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("AddrSuburb");
                OnAddrSuburbChanged();
            }
        }
        private global::System.String _AddrSuburb;
        partial void OnAddrSuburbChanging(global::System.String value);
        partial void OnAddrSuburbChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String AddrCity
        {
            get
            {
                return _AddrCity;
            }
            set
            {
                OnAddrCityChanging(value);
                ReportPropertyChanging("AddrCity");
                _AddrCity = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("AddrCity");
                OnAddrCityChanged();
            }
        }
        private global::System.String _AddrCity;
        partial void OnAddrCityChanging(global::System.String value);
        partial void OnAddrCityChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String AddrProvince
        {
            get
            {
                return _AddrProvince;
            }
            set
            {
                OnAddrProvinceChanging(value);
                ReportPropertyChanging("AddrProvince");
                _AddrProvince = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("AddrProvince");
                OnAddrProvinceChanged();
            }
        }
        private global::System.String _AddrProvince;
        partial void OnAddrProvinceChanging(global::System.String value);
        partial void OnAddrProvinceChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String AddrCode
        {
            get
            {
                return _AddrCode;
            }
            set
            {
                OnAddrCodeChanging(value);
                ReportPropertyChanging("AddrCode");
                _AddrCode = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("AddrCode");
                OnAddrCodeChanged();
            }
        }
        private global::System.String _AddrCode;
        partial void OnAddrCodeChanging(global::System.String value);
        partial void OnAddrCodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String AddrCountry
        {
            get
            {
                return _AddrCountry;
            }
            set
            {
                OnAddrCountryChanging(value);
                ReportPropertyChanging("AddrCountry");
                _AddrCountry = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("AddrCountry");
                OnAddrCountryChanged();
            }
        }
        private global::System.String _AddrCountry;
        partial void OnAddrCountryChanging(global::System.String value);
        partial void OnAddrCountryChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 RoleID
        {
            get
            {
                return _RoleID;
            }
            set
            {
                OnRoleIDChanging(value);
                ReportPropertyChanging("RoleID");
                _RoleID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("RoleID");
                OnRoleIDChanged();
            }
        }
        private global::System.Int32 _RoleID;
        partial void OnRoleIDChanging(global::System.Int32 value);
        partial void OnRoleIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Email
        {
            get
            {
                return _Email;
            }
            set
            {
                OnEmailChanging(value);
                ReportPropertyChanging("Email");
                _Email = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Email");
                OnEmailChanged();
            }
        }
        private global::System.String _Email;
        partial void OnEmailChanging(global::System.String value);
        partial void OnEmailChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> LatestLoggedInDate
        {
            get
            {
                return _LatestLoggedInDate;
            }
            set
            {
                OnLatestLoggedInDateChanging(value);
                ReportPropertyChanging("LatestLoggedInDate");
                _LatestLoggedInDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LatestLoggedInDate");
                OnLatestLoggedInDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _LatestLoggedInDate;
        partial void OnLatestLoggedInDateChanging(Nullable<global::System.DateTime> value);
        partial void OnLatestLoggedInDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> NumberOfLogins
        {
            get
            {
                return _NumberOfLogins;
            }
            set
            {
                OnNumberOfLoginsChanging(value);
                ReportPropertyChanging("NumberOfLogins");
                _NumberOfLogins = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("NumberOfLogins");
                OnNumberOfLoginsChanged();
            }
        }
        private Nullable<global::System.Int32> _NumberOfLogins;
        partial void OnNumberOfLoginsChanging(Nullable<global::System.Int32> value);
        partial void OnNumberOfLoginsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Comments
        {
            get
            {
                return _Comments;
            }
            set
            {
                OnCommentsChanging(value);
                ReportPropertyChanging("Comments");
                _Comments = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Comments");
                OnCommentsChanged();
            }
        }
        private global::System.String _Comments;
        partial void OnCommentsChanging(global::System.String value);
        partial void OnCommentsChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("GESModel", "FK_Users_Roles", "Role")]
        public Role Role
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Role>("GESModel.FK_Users_Roles", "Role").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Role>("GESModel.FK_Users_Roles", "Role").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Role> RoleReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Role>("GESModel.FK_Users_Roles", "Role");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Role>("GESModel.FK_Users_Roles", "Role", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="GESModel", Name="vMachineTypeCount")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class vMachineTypeCount : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new vMachineTypeCount object.
        /// </summary>
        /// <param name="machineTypeID">Initial value of the MachineTypeID property.</param>
        /// <param name="status">Initial value of the Status property.</param>
        public static vMachineTypeCount CreatevMachineTypeCount(global::System.Int32 machineTypeID, global::System.String status)
        {
            vMachineTypeCount vMachineTypeCount = new vMachineTypeCount();
            vMachineTypeCount.MachineTypeID = machineTypeID;
            vMachineTypeCount.Status = status;
            return vMachineTypeCount;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String MachineTypeName
        {
            get
            {
                return _MachineTypeName;
            }
            set
            {
                OnMachineTypeNameChanging(value);
                ReportPropertyChanging("MachineTypeName");
                _MachineTypeName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("MachineTypeName");
                OnMachineTypeNameChanged();
            }
        }
        private global::System.String _MachineTypeName;
        partial void OnMachineTypeNameChanging(global::System.String value);
        partial void OnMachineTypeNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 MachineTypeID
        {
            get
            {
                return _MachineTypeID;
            }
            set
            {
                if (_MachineTypeID != value)
                {
                    OnMachineTypeIDChanging(value);
                    ReportPropertyChanging("MachineTypeID");
                    _MachineTypeID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("MachineTypeID");
                    OnMachineTypeIDChanged();
                }
            }
        }
        private global::System.Int32 _MachineTypeID;
        partial void OnMachineTypeIDChanging(global::System.Int32 value);
        partial void OnMachineTypeIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Status
        {
            get
            {
                return _Status;
            }
            set
            {
                if (_Status != value)
                {
                    OnStatusChanging(value);
                    ReportPropertyChanging("Status");
                    _Status = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("Status");
                    OnStatusChanged();
                }
            }
        }
        private global::System.String _Status;
        partial void OnStatusChanging(global::System.String value);
        partial void OnStatusChanged();

        #endregion
    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="GESModel", Name="vManufacturerCount")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class vManufacturerCount : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new vManufacturerCount object.
        /// </summary>
        /// <param name="manufacturerID">Initial value of the ManufacturerID property.</param>
        /// <param name="status">Initial value of the Status property.</param>
        /// <param name="machineTypeID">Initial value of the MachineTypeID property.</param>
        public static vManufacturerCount CreatevManufacturerCount(global::System.Int32 manufacturerID, global::System.String status, global::System.Int32 machineTypeID)
        {
            vManufacturerCount vManufacturerCount = new vManufacturerCount();
            vManufacturerCount.ManufacturerID = manufacturerID;
            vManufacturerCount.Status = status;
            vManufacturerCount.MachineTypeID = machineTypeID;
            return vManufacturerCount;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ManufacturerName
        {
            get
            {
                return _ManufacturerName;
            }
            set
            {
                OnManufacturerNameChanging(value);
                ReportPropertyChanging("ManufacturerName");
                _ManufacturerName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ManufacturerName");
                OnManufacturerNameChanged();
            }
        }
        private global::System.String _ManufacturerName;
        partial void OnManufacturerNameChanging(global::System.String value);
        partial void OnManufacturerNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ManufacturerID
        {
            get
            {
                return _ManufacturerID;
            }
            set
            {
                if (_ManufacturerID != value)
                {
                    OnManufacturerIDChanging(value);
                    ReportPropertyChanging("ManufacturerID");
                    _ManufacturerID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ManufacturerID");
                    OnManufacturerIDChanged();
                }
            }
        }
        private global::System.Int32 _ManufacturerID;
        partial void OnManufacturerIDChanging(global::System.Int32 value);
        partial void OnManufacturerIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Status
        {
            get
            {
                return _Status;
            }
            set
            {
                if (_Status != value)
                {
                    OnStatusChanging(value);
                    ReportPropertyChanging("Status");
                    _Status = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("Status");
                    OnStatusChanged();
                }
            }
        }
        private global::System.String _Status;
        partial void OnStatusChanging(global::System.String value);
        partial void OnStatusChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 MachineTypeID
        {
            get
            {
                return _MachineTypeID;
            }
            set
            {
                if (_MachineTypeID != value)
                {
                    OnMachineTypeIDChanging(value);
                    ReportPropertyChanging("MachineTypeID");
                    _MachineTypeID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("MachineTypeID");
                    OnMachineTypeIDChanged();
                }
            }
        }
        private global::System.Int32 _MachineTypeID;
        partial void OnMachineTypeIDChanging(global::System.Int32 value);
        partial void OnMachineTypeIDChanged();

        #endregion
    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="GESModel", Name="vModelCount")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class vModelCount : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new vModelCount object.
        /// </summary>
        /// <param name="modelID">Initial value of the ModelID property.</param>
        /// <param name="manufacturerID">Initial value of the ManufacturerID property.</param>
        /// <param name="status">Initial value of the Status property.</param>
        public static vModelCount CreatevModelCount(global::System.Int32 modelID, global::System.Int32 manufacturerID, global::System.String status)
        {
            vModelCount vModelCount = new vModelCount();
            vModelCount.ModelID = modelID;
            vModelCount.ManufacturerID = manufacturerID;
            vModelCount.Status = status;
            return vModelCount;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ModelName
        {
            get
            {
                return _ModelName;
            }
            set
            {
                OnModelNameChanging(value);
                ReportPropertyChanging("ModelName");
                _ModelName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ModelName");
                OnModelNameChanged();
            }
        }
        private global::System.String _ModelName;
        partial void OnModelNameChanging(global::System.String value);
        partial void OnModelNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ModelID
        {
            get
            {
                return _ModelID;
            }
            set
            {
                if (_ModelID != value)
                {
                    OnModelIDChanging(value);
                    ReportPropertyChanging("ModelID");
                    _ModelID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ModelID");
                    OnModelIDChanged();
                }
            }
        }
        private global::System.Int32 _ModelID;
        partial void OnModelIDChanging(global::System.Int32 value);
        partial void OnModelIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> MachineTypeID
        {
            get
            {
                return _MachineTypeID;
            }
            set
            {
                OnMachineTypeIDChanging(value);
                ReportPropertyChanging("MachineTypeID");
                _MachineTypeID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("MachineTypeID");
                OnMachineTypeIDChanged();
            }
        }
        private Nullable<global::System.Int32> _MachineTypeID;
        partial void OnMachineTypeIDChanging(Nullable<global::System.Int32> value);
        partial void OnMachineTypeIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ManufacturerID
        {
            get
            {
                return _ManufacturerID;
            }
            set
            {
                if (_ManufacturerID != value)
                {
                    OnManufacturerIDChanging(value);
                    ReportPropertyChanging("ManufacturerID");
                    _ManufacturerID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ManufacturerID");
                    OnManufacturerIDChanged();
                }
            }
        }
        private global::System.Int32 _ManufacturerID;
        partial void OnManufacturerIDChanging(global::System.Int32 value);
        partial void OnManufacturerIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Status
        {
            get
            {
                return _Status;
            }
            set
            {
                if (_Status != value)
                {
                    OnStatusChanging(value);
                    ReportPropertyChanging("Status");
                    _Status = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("Status");
                    OnStatusChanged();
                }
            }
        }
        private global::System.String _Status;
        partial void OnStatusChanging(global::System.String value);
        partial void OnStatusChanged();

        #endregion
    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="GESModel", Name="vShantuiProductList")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class vShantuiProductList : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new vShantuiProductList object.
        /// </summary>
        /// <param name="machineID">Initial value of the MachineID property.</param>
        /// <param name="machineGrade">Initial value of the MachineGrade property.</param>
        /// <param name="status">Initial value of the Status property.</param>
        /// <param name="machineTypeName">Initial value of the MachineTypeName property.</param>
        /// <param name="industryName">Initial value of the IndustryName property.</param>
        /// <param name="modelName">Initial value of the ModelName property.</param>
        /// <param name="manufacturerName">Initial value of the ManufacturerName property.</param>
        /// <param name="machineTypeID">Initial value of the MachineTypeID property.</param>
        public static vShantuiProductList CreatevShantuiProductList(global::System.Int32 machineID, global::System.String machineGrade, global::System.String status, global::System.String machineTypeName, global::System.String industryName, global::System.String modelName, global::System.String manufacturerName, global::System.Int32 machineTypeID)
        {
            vShantuiProductList vShantuiProductList = new vShantuiProductList();
            vShantuiProductList.MachineID = machineID;
            vShantuiProductList.MachineGrade = machineGrade;
            vShantuiProductList.Status = status;
            vShantuiProductList.MachineTypeName = machineTypeName;
            vShantuiProductList.IndustryName = industryName;
            vShantuiProductList.ModelName = modelName;
            vShantuiProductList.ManufacturerName = manufacturerName;
            vShantuiProductList.MachineTypeID = machineTypeID;
            return vShantuiProductList;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 MachineID
        {
            get
            {
                return _MachineID;
            }
            set
            {
                if (_MachineID != value)
                {
                    OnMachineIDChanging(value);
                    ReportPropertyChanging("MachineID");
                    _MachineID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("MachineID");
                    OnMachineIDChanged();
                }
            }
        }
        private global::System.Int32 _MachineID;
        partial void OnMachineIDChanging(global::System.Int32 value);
        partial void OnMachineIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String MachineGrade
        {
            get
            {
                return _MachineGrade;
            }
            set
            {
                if (_MachineGrade != value)
                {
                    OnMachineGradeChanging(value);
                    ReportPropertyChanging("MachineGrade");
                    _MachineGrade = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("MachineGrade");
                    OnMachineGradeChanged();
                }
            }
        }
        private global::System.String _MachineGrade;
        partial void OnMachineGradeChanging(global::System.String value);
        partial void OnMachineGradeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String SerialNo
        {
            get
            {
                return _SerialNo;
            }
            set
            {
                OnSerialNoChanging(value);
                ReportPropertyChanging("SerialNo");
                _SerialNo = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("SerialNo");
                OnSerialNoChanged();
            }
        }
        private global::System.String _SerialNo;
        partial void OnSerialNoChanging(global::System.String value);
        partial void OnSerialNoChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Year
        {
            get
            {
                return _Year;
            }
            set
            {
                OnYearChanging(value);
                ReportPropertyChanging("Year");
                _Year = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Year");
                OnYearChanged();
            }
        }
        private global::System.String _Year;
        partial void OnYearChanging(global::System.String value);
        partial void OnYearChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Mileage
        {
            get
            {
                return _Mileage;
            }
            set
            {
                OnMileageChanging(value);
                ReportPropertyChanging("Mileage");
                _Mileage = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Mileage");
                OnMileageChanged();
            }
        }
        private global::System.String _Mileage;
        partial void OnMileageChanging(global::System.String value);
        partial void OnMileageChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Location
        {
            get
            {
                return _Location;
            }
            set
            {
                OnLocationChanging(value);
                ReportPropertyChanging("Location");
                _Location = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Location");
                OnLocationChanged();
            }
        }
        private global::System.String _Location;
        partial void OnLocationChanging(global::System.String value);
        partial void OnLocationChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> SellPrice
        {
            get
            {
                return _SellPrice;
            }
            set
            {
                OnSellPriceChanging(value);
                ReportPropertyChanging("SellPrice");
                _SellPrice = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SellPrice");
                OnSellPriceChanged();
            }
        }
        private Nullable<global::System.Decimal> _SellPrice;
        partial void OnSellPriceChanging(Nullable<global::System.Decimal> value);
        partial void OnSellPriceChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Status
        {
            get
            {
                return _Status;
            }
            set
            {
                if (_Status != value)
                {
                    OnStatusChanging(value);
                    ReportPropertyChanging("Status");
                    _Status = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("Status");
                    OnStatusChanged();
                }
            }
        }
        private global::System.String _Status;
        partial void OnStatusChanging(global::System.String value);
        partial void OnStatusChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String MachineTypeName
        {
            get
            {
                return _MachineTypeName;
            }
            set
            {
                if (_MachineTypeName != value)
                {
                    OnMachineTypeNameChanging(value);
                    ReportPropertyChanging("MachineTypeName");
                    _MachineTypeName = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("MachineTypeName");
                    OnMachineTypeNameChanged();
                }
            }
        }
        private global::System.String _MachineTypeName;
        partial void OnMachineTypeNameChanging(global::System.String value);
        partial void OnMachineTypeNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String IndustryName
        {
            get
            {
                return _IndustryName;
            }
            set
            {
                if (_IndustryName != value)
                {
                    OnIndustryNameChanging(value);
                    ReportPropertyChanging("IndustryName");
                    _IndustryName = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("IndustryName");
                    OnIndustryNameChanged();
                }
            }
        }
        private global::System.String _IndustryName;
        partial void OnIndustryNameChanging(global::System.String value);
        partial void OnIndustryNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ModelName
        {
            get
            {
                return _ModelName;
            }
            set
            {
                if (_ModelName != value)
                {
                    OnModelNameChanging(value);
                    ReportPropertyChanging("ModelName");
                    _ModelName = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("ModelName");
                    OnModelNameChanged();
                }
            }
        }
        private global::System.String _ModelName;
        partial void OnModelNameChanging(global::System.String value);
        partial void OnModelNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ManufacturerName
        {
            get
            {
                return _ManufacturerName;
            }
            set
            {
                if (_ManufacturerName != value)
                {
                    OnManufacturerNameChanging(value);
                    ReportPropertyChanging("ManufacturerName");
                    _ManufacturerName = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("ManufacturerName");
                    OnManufacturerNameChanged();
                }
            }
        }
        private global::System.String _ManufacturerName;
        partial void OnManufacturerNameChanging(global::System.String value);
        partial void OnManufacturerNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String MachineDescription
        {
            get
            {
                return _MachineDescription;
            }
            set
            {
                OnMachineDescriptionChanging(value);
                ReportPropertyChanging("MachineDescription");
                _MachineDescription = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("MachineDescription");
                OnMachineDescriptionChanged();
            }
        }
        private global::System.String _MachineDescription;
        partial void OnMachineDescriptionChanging(global::System.String value);
        partial void OnMachineDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 MachineTypeID
        {
            get
            {
                return _MachineTypeID;
            }
            set
            {
                if (_MachineTypeID != value)
                {
                    OnMachineTypeIDChanging(value);
                    ReportPropertyChanging("MachineTypeID");
                    _MachineTypeID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("MachineTypeID");
                    OnMachineTypeIDChanged();
                }
            }
        }
        private global::System.Int32 _MachineTypeID;
        partial void OnMachineTypeIDChanging(global::System.Int32 value);
        partial void OnMachineTypeIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> ModelID
        {
            get
            {
                return _ModelID;
            }
            set
            {
                OnModelIDChanging(value);
                ReportPropertyChanging("ModelID");
                _ModelID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ModelID");
                OnModelIDChanged();
            }
        }
        private Nullable<global::System.Int32> _ModelID;
        partial void OnModelIDChanging(Nullable<global::System.Int32> value);
        partial void OnModelIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> ManufacturerID
        {
            get
            {
                return _ManufacturerID;
            }
            set
            {
                OnManufacturerIDChanging(value);
                ReportPropertyChanging("ManufacturerID");
                _ManufacturerID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ManufacturerID");
                OnManufacturerIDChanged();
            }
        }
        private Nullable<global::System.Int32> _ManufacturerID;
        partial void OnManufacturerIDChanging(Nullable<global::System.Int32> value);
        partial void OnManufacturerIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String PhotoUrl
        {
            get
            {
                return _PhotoUrl;
            }
            set
            {
                OnPhotoUrlChanging(value);
                ReportPropertyChanging("PhotoUrl");
                _PhotoUrl = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("PhotoUrl");
                OnPhotoUrlChanged();
            }
        }
        private global::System.String _PhotoUrl;
        partial void OnPhotoUrlChanging(global::System.String value);
        partial void OnPhotoUrlChanged();

        #endregion
    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="GESModel", Name="vUsedMachineList")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class vUsedMachineList : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new vUsedMachineList object.
        /// </summary>
        /// <param name="machineID">Initial value of the MachineID property.</param>
        /// <param name="machineGrade">Initial value of the MachineGrade property.</param>
        /// <param name="status">Initial value of the Status property.</param>
        /// <param name="machineTypeName">Initial value of the MachineTypeName property.</param>
        /// <param name="industryName">Initial value of the IndustryName property.</param>
        /// <param name="manufacturerName">Initial value of the ManufacturerName property.</param>
        /// <param name="photoUrl">Initial value of the PhotoUrl property.</param>
        /// <param name="machineTypeID">Initial value of the MachineTypeID property.</param>
        public static vUsedMachineList CreatevUsedMachineList(global::System.Int32 machineID, global::System.String machineGrade, global::System.String status, global::System.String machineTypeName, global::System.String industryName, global::System.String manufacturerName, global::System.String photoUrl, global::System.Int32 machineTypeID)
        {
            vUsedMachineList vUsedMachineList = new vUsedMachineList();
            vUsedMachineList.MachineID = machineID;
            vUsedMachineList.MachineGrade = machineGrade;
            vUsedMachineList.Status = status;
            vUsedMachineList.MachineTypeName = machineTypeName;
            vUsedMachineList.IndustryName = industryName;
            vUsedMachineList.ManufacturerName = manufacturerName;
            vUsedMachineList.PhotoUrl = photoUrl;
            vUsedMachineList.MachineTypeID = machineTypeID;
            return vUsedMachineList;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 MachineID
        {
            get
            {
                return _MachineID;
            }
            set
            {
                if (_MachineID != value)
                {
                    OnMachineIDChanging(value);
                    ReportPropertyChanging("MachineID");
                    _MachineID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("MachineID");
                    OnMachineIDChanged();
                }
            }
        }
        private global::System.Int32 _MachineID;
        partial void OnMachineIDChanging(global::System.Int32 value);
        partial void OnMachineIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String MachineGrade
        {
            get
            {
                return _MachineGrade;
            }
            set
            {
                if (_MachineGrade != value)
                {
                    OnMachineGradeChanging(value);
                    ReportPropertyChanging("MachineGrade");
                    _MachineGrade = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("MachineGrade");
                    OnMachineGradeChanged();
                }
            }
        }
        private global::System.String _MachineGrade;
        partial void OnMachineGradeChanging(global::System.String value);
        partial void OnMachineGradeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String SerialNo
        {
            get
            {
                return _SerialNo;
            }
            set
            {
                OnSerialNoChanging(value);
                ReportPropertyChanging("SerialNo");
                _SerialNo = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("SerialNo");
                OnSerialNoChanged();
            }
        }
        private global::System.String _SerialNo;
        partial void OnSerialNoChanging(global::System.String value);
        partial void OnSerialNoChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Year
        {
            get
            {
                return _Year;
            }
            set
            {
                OnYearChanging(value);
                ReportPropertyChanging("Year");
                _Year = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Year");
                OnYearChanged();
            }
        }
        private global::System.String _Year;
        partial void OnYearChanging(global::System.String value);
        partial void OnYearChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Mileage
        {
            get
            {
                return _Mileage;
            }
            set
            {
                OnMileageChanging(value);
                ReportPropertyChanging("Mileage");
                _Mileage = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Mileage");
                OnMileageChanged();
            }
        }
        private global::System.String _Mileage;
        partial void OnMileageChanging(global::System.String value);
        partial void OnMileageChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Location
        {
            get
            {
                return _Location;
            }
            set
            {
                OnLocationChanging(value);
                ReportPropertyChanging("Location");
                _Location = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Location");
                OnLocationChanged();
            }
        }
        private global::System.String _Location;
        partial void OnLocationChanging(global::System.String value);
        partial void OnLocationChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> SellPrice
        {
            get
            {
                return _SellPrice;
            }
            set
            {
                OnSellPriceChanging(value);
                ReportPropertyChanging("SellPrice");
                _SellPrice = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SellPrice");
                OnSellPriceChanged();
            }
        }
        private Nullable<global::System.Decimal> _SellPrice;
        partial void OnSellPriceChanging(Nullable<global::System.Decimal> value);
        partial void OnSellPriceChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Status
        {
            get
            {
                return _Status;
            }
            set
            {
                if (_Status != value)
                {
                    OnStatusChanging(value);
                    ReportPropertyChanging("Status");
                    _Status = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("Status");
                    OnStatusChanged();
                }
            }
        }
        private global::System.String _Status;
        partial void OnStatusChanging(global::System.String value);
        partial void OnStatusChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String MachineTypeName
        {
            get
            {
                return _MachineTypeName;
            }
            set
            {
                if (_MachineTypeName != value)
                {
                    OnMachineTypeNameChanging(value);
                    ReportPropertyChanging("MachineTypeName");
                    _MachineTypeName = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("MachineTypeName");
                    OnMachineTypeNameChanged();
                }
            }
        }
        private global::System.String _MachineTypeName;
        partial void OnMachineTypeNameChanging(global::System.String value);
        partial void OnMachineTypeNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String IndustryName
        {
            get
            {
                return _IndustryName;
            }
            set
            {
                if (_IndustryName != value)
                {
                    OnIndustryNameChanging(value);
                    ReportPropertyChanging("IndustryName");
                    _IndustryName = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("IndustryName");
                    OnIndustryNameChanged();
                }
            }
        }
        private global::System.String _IndustryName;
        partial void OnIndustryNameChanging(global::System.String value);
        partial void OnIndustryNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ModelName
        {
            get
            {
                return _ModelName;
            }
            set
            {
                OnModelNameChanging(value);
                ReportPropertyChanging("ModelName");
                _ModelName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ModelName");
                OnModelNameChanged();
            }
        }
        private global::System.String _ModelName;
        partial void OnModelNameChanging(global::System.String value);
        partial void OnModelNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ManufacturerName
        {
            get
            {
                return _ManufacturerName;
            }
            set
            {
                if (_ManufacturerName != value)
                {
                    OnManufacturerNameChanging(value);
                    ReportPropertyChanging("ManufacturerName");
                    _ManufacturerName = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("ManufacturerName");
                    OnManufacturerNameChanged();
                }
            }
        }
        private global::System.String _ManufacturerName;
        partial void OnManufacturerNameChanging(global::System.String value);
        partial void OnManufacturerNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String PhotoUrl
        {
            get
            {
                return _PhotoUrl;
            }
            set
            {
                if (_PhotoUrl != value)
                {
                    OnPhotoUrlChanging(value);
                    ReportPropertyChanging("PhotoUrl");
                    _PhotoUrl = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("PhotoUrl");
                    OnPhotoUrlChanged();
                }
            }
        }
        private global::System.String _PhotoUrl;
        partial void OnPhotoUrlChanging(global::System.String value);
        partial void OnPhotoUrlChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String MachineDescription
        {
            get
            {
                return _MachineDescription;
            }
            set
            {
                OnMachineDescriptionChanging(value);
                ReportPropertyChanging("MachineDescription");
                _MachineDescription = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("MachineDescription");
                OnMachineDescriptionChanged();
            }
        }
        private global::System.String _MachineDescription;
        partial void OnMachineDescriptionChanging(global::System.String value);
        partial void OnMachineDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 MachineTypeID
        {
            get
            {
                return _MachineTypeID;
            }
            set
            {
                if (_MachineTypeID != value)
                {
                    OnMachineTypeIDChanging(value);
                    ReportPropertyChanging("MachineTypeID");
                    _MachineTypeID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("MachineTypeID");
                    OnMachineTypeIDChanged();
                }
            }
        }
        private global::System.Int32 _MachineTypeID;
        partial void OnMachineTypeIDChanging(global::System.Int32 value);
        partial void OnMachineTypeIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> ModelID
        {
            get
            {
                return _ModelID;
            }
            set
            {
                OnModelIDChanging(value);
                ReportPropertyChanging("ModelID");
                _ModelID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ModelID");
                OnModelIDChanged();
            }
        }
        private Nullable<global::System.Int32> _ModelID;
        partial void OnModelIDChanging(Nullable<global::System.Int32> value);
        partial void OnModelIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> ManufacturerID
        {
            get
            {
                return _ManufacturerID;
            }
            set
            {
                OnManufacturerIDChanging(value);
                ReportPropertyChanging("ManufacturerID");
                _ManufacturerID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ManufacturerID");
                OnManufacturerIDChanged();
            }
        }
        private Nullable<global::System.Int32> _ManufacturerID;
        partial void OnManufacturerIDChanging(Nullable<global::System.Int32> value);
        partial void OnManufacturerIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> IndustryID
        {
            get
            {
                return _IndustryID;
            }
            set
            {
                OnIndustryIDChanging(value);
                ReportPropertyChanging("IndustryID");
                _IndustryID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IndustryID");
                OnIndustryIDChanged();
            }
        }
        private Nullable<global::System.Int32> _IndustryID;
        partial void OnIndustryIDChanging(Nullable<global::System.Int32> value);
        partial void OnIndustryIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> DateInserted
        {
            get
            {
                return _DateInserted;
            }
            set
            {
                OnDateInsertedChanging(value);
                ReportPropertyChanging("DateInserted");
                _DateInserted = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DateInserted");
                OnDateInsertedChanged();
            }
        }
        private Nullable<global::System.DateTime> _DateInserted;
        partial void OnDateInsertedChanging(Nullable<global::System.DateTime> value);
        partial void OnDateInsertedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String PhotoName
        {
            get
            {
                return _PhotoName;
            }
            set
            {
                OnPhotoNameChanging(value);
                ReportPropertyChanging("PhotoName");
                _PhotoName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("PhotoName");
                OnPhotoNameChanged();
            }
        }
        private global::System.String _PhotoName;
        partial void OnPhotoNameChanging(global::System.String value);
        partial void OnPhotoNameChanged();

        #endregion
    
    }

    #endregion
    
}
